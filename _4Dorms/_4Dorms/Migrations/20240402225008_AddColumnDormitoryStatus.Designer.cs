// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _4Dorms.Persistance;

#nullable disable

namespace _4Dorms.Migrations
{
    [DbContext(typeof(_4DormsDbContext))]
    [Migration("20240402225008_AddColumnDormitoryStatus")]
    partial class AddColumnDormitoryStatus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DormitoryFavoriteList", b =>
                {
                    b.Property<int>("DormitoriesDormitoryId")
                        .HasColumnType("int");

                    b.Property<int>("FavoritesFavoriteId")
                        .HasColumnType("int");

                    b.HasKey("DormitoriesDormitoryId", "FavoritesFavoriteId");

                    b.HasIndex("FavoritesFavoriteId");

                    b.ToTable("DormitoryFavoriteList");
                });

            modelBuilder.Entity("_4Dorms.Models.Administrator", b =>
                {
                    b.Property<int>("AdministratorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdministratorId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdministratorId");

                    b.ToTable("Administrators");
                });

            modelBuilder.Entity("_4Dorms.Models.Dormitory", b =>
                {
                    b.Property<int>("DormitoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DormitoryId"));

                    b.Property<int?>("AdministratorId")
                        .HasColumnType("int");

                    b.Property<string>("Amenities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DormitoryName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("DormitoryOwnerId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("DormitoryId");

                    b.HasIndex("AdministratorId");

                    b.HasIndex("DormitoryOwnerId");

                    b.ToTable("Dormitories");
                });

            modelBuilder.Entity("_4Dorms.Models.DormitoryBooking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DormitoryId")
                        .HasColumnType("int");

                    b.Property<int?>("DormitoryOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentGateId")
                        .HasColumnType("int");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("BookingId");

                    b.HasIndex("DormitoryId");

                    b.HasIndex("DormitoryOwnerId");

                    b.HasIndex("PaymentGateId");

                    b.HasIndex("RoomId");

                    b.ToTable("DormitoriesBooking");
                });

            modelBuilder.Entity("_4Dorms.Models.DormitoryOwner", b =>
                {
                    b.Property<int>("DormitoryOwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DormitoryOwnerId"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DormitoryOwnerId");

                    b.ToTable("DormitoryOwners");
                });

            modelBuilder.Entity("_4Dorms.Models.FavoriteList", b =>
                {
                    b.Property<int>("FavoriteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FavoriteId"));

                    b.Property<int?>("DormitoryOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("FavoriteId");

                    b.HasIndex("DormitoryOwnerId");

                    b.HasIndex("StudentId");

                    b.ToTable("FavoriteLists");
                });

            modelBuilder.Entity("_4Dorms.Models.PaymentGate", b =>
                {
                    b.Property<int>("PaymentGateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentGateId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsSuccessful")
                        .HasColumnType("bit");

                    b.Property<int>("PayerAccount")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentGateId");

                    b.ToTable("PaymentGateways");
                });

            modelBuilder.Entity("_4Dorms.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DormitoryId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("ReviewId");

                    b.HasIndex("DormitoryId");

                    b.HasIndex("StudentId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("_4Dorms.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<string>("Amenities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DormitoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailabile")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.HasKey("RoomId");

                    b.HasIndex("DormitoryId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("_4Dorms.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Disabilities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("DormitoryFavoriteList", b =>
                {
                    b.HasOne("_4Dorms.Models.Dormitory", null)
                        .WithMany()
                        .HasForeignKey("DormitoriesDormitoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_4Dorms.Models.FavoriteList", null)
                        .WithMany()
                        .HasForeignKey("FavoritesFavoriteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_4Dorms.Models.Dormitory", b =>
                {
                    b.HasOne("_4Dorms.Models.Administrator", "Administrator")
                        .WithMany()
                        .HasForeignKey("AdministratorId");

                    b.HasOne("_4Dorms.Models.DormitoryOwner", "DormitoryOwner")
                        .WithMany("Dormitories")
                        .HasForeignKey("DormitoryOwnerId");

                    b.Navigation("Administrator");

                    b.Navigation("DormitoryOwner");
                });

            modelBuilder.Entity("_4Dorms.Models.DormitoryBooking", b =>
                {
                    b.HasOne("_4Dorms.Models.Dormitory", "Dormitory")
                        .WithMany("Bookings")
                        .HasForeignKey("DormitoryId");

                    b.HasOne("_4Dorms.Models.DormitoryOwner", "DormitoryOwner")
                        .WithMany("Bookings")
                        .HasForeignKey("DormitoryOwnerId");

                    b.HasOne("_4Dorms.Models.PaymentGate", "PaymentGate")
                        .WithMany("Bookings")
                        .HasForeignKey("PaymentGateId");

                    b.HasOne("_4Dorms.Models.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId");

                    b.Navigation("Dormitory");

                    b.Navigation("DormitoryOwner");

                    b.Navigation("PaymentGate");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("_4Dorms.Models.FavoriteList", b =>
                {
                    b.HasOne("_4Dorms.Models.DormitoryOwner", "DormitoryOwner")
                        .WithMany()
                        .HasForeignKey("DormitoryOwnerId");

                    b.HasOne("_4Dorms.Models.Student", "Student")
                        .WithMany("Favorites")
                        .HasForeignKey("StudentId");

                    b.Navigation("DormitoryOwner");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("_4Dorms.Models.Review", b =>
                {
                    b.HasOne("_4Dorms.Models.Dormitory", "Dormitory")
                        .WithMany("Reviews")
                        .HasForeignKey("DormitoryId");

                    b.HasOne("_4Dorms.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.Navigation("Dormitory");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("_4Dorms.Models.Room", b =>
                {
                    b.HasOne("_4Dorms.Models.Dormitory", "Dormitory")
                        .WithMany("Rooms")
                        .HasForeignKey("DormitoryId");

                    b.Navigation("Dormitory");
                });

            modelBuilder.Entity("_4Dorms.Models.Dormitory", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Reviews");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("_4Dorms.Models.DormitoryOwner", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Dormitories");
                });

            modelBuilder.Entity("_4Dorms.Models.PaymentGate", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("_4Dorms.Models.Room", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("_4Dorms.Models.Student", b =>
                {
                    b.Navigation("Favorites");
                });
#pragma warning restore 612, 618
        }
    }
}
